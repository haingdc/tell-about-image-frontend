#!/usr/bin/env deno run --allow-read --allow-write

/**
 * This script automatically generates export statements for all tsx icon components
 * in the src/components/icons directory and updates the index.ts file.
 */

// Get the current working directory to make paths relative to the project root
const cwd = Deno.cwd();
const iconsDir = `${cwd.replace("/codemod", "")}/app/ui/icons`;
const indexFile = `${iconsDir}/index.ts`;

// Function to generate the export statement for a TSX file
const generateExport = (filename: string): string => {
  // Extract component name (remove .tsx extension)
  const componentName = filename.replace(".tsx", "");
  return `export { default as ${componentName} } from './${componentName}.tsx'`;
};

async function generateIconExports(): Promise<void> {
  try {
    console.log("Scanning for icon components...");

    // Read all files in the icons directory
    const files: string[] = [];
    for await (const entry of Deno.readDir(iconsDir)) {
      if (
        entry.isFile && entry.name.endsWith(".tsx") &&
        !entry.name.endsWith("stories.tsx")
      ) {
        files.push(entry.name);
      }
    }

    if (files.length === 0) {
      console.log("No React icon components found.");
      return;
    }

    // Sort files alphabetically for consistent output
    files.sort();

    // Generate export statements for each TSX file
    const exportStatements: string[] = files.map(generateExport);

    // Extract component names for the IconName type
    const componentNames = files.map((filename) =>
      filename.replace(".tsx", "")
    );

    // Generate the IconName type definition
    const iconNameType = `type IconName =\n  | '${
      componentNames.join("'\n  | '")
    }'`;

    // Create the final content with a header comment
    const fileContent: string =
      `// This file is auto-generated by scripts/generate-icon-exports.js
// Do not edit manually

${exportStatements.join("\n")}

${iconNameType}

export type { IconName }
`;

    // Write the export statements to the index.ts file
    await Deno.writeTextFile(indexFile, fileContent);

    console.log(
      `Successfully generated exports for ${files.length} icon components.`,
    );
    console.log(`Updated ${indexFile}`);
  } catch (error) {
    console.error("Error generating icon exports:", error);
  }
}

// Run the main function
generateIconExports();
